@mixin neo-arrow() {
  .neo-arrow {
    display: block;
    height: $arrow-height;
    position: absolute;
    width: $arrow-width;

    &::before,
    &::after {
      border-color: transparent;
      border-style: solid;
      content: "";
      display: block;
      position: absolute;
    }
  }
}

@mixin neo-arrow-color($position) {
  @each $name, $color in $neo-state-colors {
    &--#{$name} {
      .neo-arrow::before {
        border-#{$position}-color: $color;
      }
    }
  }
}

@mixin neo-arrow-left(
  $position: "left",
  $arrow-border-width: $arrow-border-width,
  $arrow-outer-color: $arrow-outer-color,
  $arrow-color: $arrow-color
) {
  .neo-arrow {
    height: $arrow-width;
    left: calc((#{$arrow-height} + #{$arrow-border-width}) * -1);
    right: auto;
    top: 50%;
    transform: translateY(-50%);
    width: $arrow-height;

    &::before {
      border-right-color: $arrow-outer-color;
      border-width: ($arrow-width / 2) $arrow-height ($arrow-width / 2) 0;
      left: 0;
    }

    &::after {
      border-right-color: $arrow-color;
      border-width: ($arrow-width / 2) $arrow-height ($arrow-width / 2) 0;
      left: $arrow-border-width;
      right: auto;
    }
  }

  @include neo-arrow-color(right);
}

@mixin neo-arrow-right(
  $arrow-border-width: $arrow-border-width,
  $arrow-outer-color: $arrow-outer-color,
  $arrow-color: $arrow-color
) {
  .neo-arrow {
    height: $arrow-width;
    right: calc((#{$arrow-height} + #{$arrow-border-width}) * -1);
    top: 50%;
    transform: translateY(-50%);
    width: $arrow-height;

    &::before {
      border-left-color: $arrow-outer-color;
      border-width: ($arrow-width / 2) 0 ($arrow-width / 2) $arrow-height;
      right: 0;
    }

    &::after {
      border-left-color: $arrow-color;
      border-width: ($arrow-width / 2) 0 ($arrow-width / 2) $arrow-height;
      right: $arrow-border-width;
    }
  }

  @include neo-arrow-color(left);
}

@mixin neo-arrow-up(
  $arrow-border-width: $arrow-border-width,
  $arrow-outer-color: $arrow-outer-color,
  $arrow-color: $arrow-color
) {
  .neo-arrow {
    bottom: calc((#{$arrow-height} + #{$arrow-border-width}) * -1);
    left: 50%;
    transform: translateX(-50%);

    &::before {
      border-top-color: $arrow-outer-color;
      border-width: $arrow-height ($arrow-width / 2) 0;
      bottom: 0;
    }

    &::after {
      border-top-color: $arrow-color;
      border-width: $arrow-height ($arrow-width / 2) 0;
      bottom: $arrow-border-width;
    }
  }

  @include neo-arrow-color(top);
}

@mixin neo-arrow-down(
  $arrow-border-width: $arrow-border-width,
  $arrow-outer-color: $arrow-outer-color,
  $arrow-color: $arrow-color
) {
  .neo-arrow {
    left: 50%;
    top: calc((#{$arrow-height} + #{$arrow-border-width}) * -1);
    transform: translateX(-50%);

    &::before {
      border-bottom-color: $arrow-outer-color;
      border-width: 0 ($arrow-width / 2) $arrow-height ($arrow-width / 2);
      top: 0;
    }

    &::after {
      border-bottom-color: $arrow-color;
      border-width: 0 ($arrow-width / 2) $arrow-height ($arrow-width / 2);
      top: $arrow-border-width;
    }
  }

  @include neo-arrow-color(bottom);
}

@mixin neo-arrow-justify-left {
  .neo-arrow {
    left: auto;
    right: $arrow-offset;
    transform: translateX(50%);

    @include rtl-selector {
      left: $arrow-offset;
      right: auto;
      transform: translateX(-50%);
    }
  }
}

@mixin neo-arrow-justify-right {
  .neo-arrow {
    left: $arrow-offset;
    transform: translateX(-50%);

    @include rtl-selector {
      left: auto;
      right: $arrow-offset;
      transform: translateX(50%);
    }
  }
}

@mixin neo-arrow-justify-up {
  .neo-arrow {
    bottom: 0;
    top: auto;
  }
}

@mixin neo-arrow-justify-down {
  .neo-arrow {
    top: $arrow-offset;
  }
}

@include neo-arrow;
