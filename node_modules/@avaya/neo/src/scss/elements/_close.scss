@mixin close-type($config) {
  @if map_has_key($config, background-color) {
    background-color: map_get($config, background-color);
  }

  @if map_has_key($config, color) {
    &::after,
    &::before {
      background-color: map_get($config, color);
    }
  }

  @if map_has_key($config, hover-background-color) {
    &:hover {
      background-color: map_get($config, hover-background-color);
    }
  }

  @if map_has_key($config, hover-color) {
    &:hover {
      &::after,
      &::before {
        background-color: map_get($config, hover-color);
      }
    }
  }
}

@mixin close-size($value) {
  height: $value;
  width: $value;
}

@mixin close-types() {
  @each $name, $config in $close-types {
    @if $name == "default" {
      @include close-type($config);
    } @else {
      &--#{$name} {
        @include close-type($config);
      }
    }
  }
}

@mixin close-sizes() {
  @each $name, $value in $close-sizes {
    @if $name == "default" {
      @include close-size($value);
    } @else {
      &--#{$name} {
        @include close-size($value);
      }
    }
  }
}

.neo-close {
  border: 0;
  border-radius: 100%;
  cursor: pointer;
  display: inline-block;
  flex-grow: 0;
  flex-shrink: 0;
  font-size: 0;
  outline: none;
  padding: 0;
  pointer-events: auto;
  position: relative;
  text-align: center;
  vertical-align: top;

  &::after,
  &::before {
    content: "";
    display: block;
    left: 50%;
    position: absolute;
    top: 50%;
    transform: translateX(-50%) translateY(-50%) rotate(45deg);
    transform-origin: center center;
  }
  &:focus {
    box-shadow: $input-focus-shadow;
  }

  &::before {
    height: 1px;
    width: 70%;
  }

  &::after {
    height: 70%;
    width: 1px;
  }

  @include close-types;
  @include close-sizes;
}
