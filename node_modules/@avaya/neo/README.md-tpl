# Neo CSS Framework

## Download

### Compiled CSS

Download ready-to-use compiled code for Neo to easily drop into your project.

<a class="button" href="http://npm.avaya.design/@avaya/neo/-/@avaya/neo-@@version.tgz" title="Download v@@version">Download v@@version</a>

### Package managers

Neo is hosted privately, which means you'll need to set the registry url first. There are a couple of ways doing this:

- create a `.npmrc` file with this line: `@avaya:registry=http://npm.avaya.design` (recommended)
- `npm config set @avaya:registry http://npm.avaya.design`

Then proceed with: `npm install @avaya/neo`.

## Add Neo to Your Page

Add the compiled and minified CSS to the `<head>` element of your HTML5 document.

```html
<link rel="stylesheet" type="text/css" href="dist/css/neo/neo.min.css" />
```

## What's included

Both compiled and it's minified version are available:

```text
neo/
└── dist/
    └── css/
        └── neo/
            ├── neo.css
            └── neo.min.css
            neo/
└── src/
    └── scss/
```

_Note_: AOC Icons set is also included in `neo.css`.

## Code requirements

Use HTML5 doctype:

```html
<!DOCTYPE html>
```

Add the responsive viewport meta tag:

```html
<meta name="viewport" content="width=device-width, initial-scale=1" />
```

## Browser support

Neo is set to support the last 2 versions of each browser, with the exception of IE (only IE11 is supported).

## Contributing

### Installation

- Install Grunt globally: `npm install grunt-cli -g`
- Install Docsify globally: `npm install docsify-cli -g`
- `npm install` - this installs the required NodeJS modules (e.g. `node_modules`)

NOTE: If you have previous versions of any of the above packages, it's recommended that you update them: `npm update -g`

### Usage

- `grunt` : creates a development build (default)
- `grunt development` : creates a development build
- `grunt production` : creates a production build and release folder

### Modifying the Neo documentation

Neo docs have been created using [docsify](https://docsify.js.org).

Documentation will be served automatically on `http://localhost:3000/` while `grunt development` is running.

If you need more pages, you can simply create more markdown files in docs directory. For example: `guide.md`

Update `_sidebar.md` with a new page:

`- [Guide](guide.md)`

#### Usage with Docker

1. Build the image locally:

> docker build -t neo-docs .

2. Run the docker image, mapping the container port 8081 to docker port 80:

> docker run -it -p 8081:80 neo-docs

### Modifying the Neo framework

Neo framework is built on sass. The src code is located in the `/src` folder.

#### Style guide

##### Class names

- Names are written in lowercase Latin letters.
- Words are separated by a hyphen (`-`).
- The class name starts with `neo-`.

It's all about [BEM](http://getbem.com/naming/). Neo uses the `BEM` class name convention, which consists of three parts: **B**lock, **E**lement, and **M**odifier.

###### Block

Encapsulates a standalone entity that is meaningful on its own.

- The block name defines the namespace for its elements and modifiers.

```css
.neo-block
```

###### Element

Parts of a block and have no standalone meaning. Any element is semantically tied to its block.

- The element name is separated from the block name by a double underscore (`__`).

```css
.neo-block__elem
```

###### Modifier

Flags on blocks or elements. Use them to change appearance, behavior or state.

- The modifier name is separated from the block or element name by a double hyphen (`--`).

```css
.neo-block--modifier
```

```css
.neo-block__elem--modifier
```

###### Example

```html
<div class="neo-btn">
  <span class="neo-btn__price">$13,99</span>
  <span class="neo-btn__price neo-btn__price--on-sale">$11,99</span>
</div>
```

```scss
$btn-height: 24px;

@mixin btn-price-on-sale {
  &--on-sale {
    // on-sale styles
  }
}

@mixin btn-price {
  &__price {
    // price styles

    @include btn-price-on-sale;
  }
}

.neo-btn {
  height: $btn-height;

  @include btn-price;
}
```

##### Variable names

Sass variable names are somewhat similar to class names. BEM approach is used here too, with addition of the CSS property postfix.

```scss
$block-element-modifier-property
```

See the example below:

```scss
$btn-height: 24px;
$btn-price-padding: 4px;
$btn-price-discount-color: red;
```

Bear in mind:

- Merge variables

```text
`$btn-padding-x: 4px;` and `$btn-padding-y: 2px;` can be merged into a single variable `$btn-padding: 2px 4px;`.
```

- Use predefined global variables when possible. Do not use mathematical operations on globals in order to get the value you want. Simply set the value, or introduce another global variable.

```scss
$global-font-size: 14px;
$global-font-size-x-small: 9px;
$global-font-size-small: 11px;
$global-font-size-large: 18px;
$global-font-size-x-large: 24px;
$global-spacer: 6px;
$global-spacer-small: 3px;
$global-spacer-large: 10px;
$global-spacer-x-large: 15px;
$global-divider-thickness: 1px;
$global-radius: 3px;
$global-transition-duration: 0.4s;
$global-border-color: $neo-light-grey;
$global-border-dark-color: $neo-blue-grey-dark;
```

- Always introduce a component variable in `src/scss/_variables.scss`, and use it inside of the component. Exception are the cases where the component structure requires an exact value, e.g. `border-radius` for circle has to be `50%`.

- Avoid hacks! They can lead to poor development practices and a failure to diagnose or understand the real problem.

```scss
// _variables.scss
$btn-font-size: $global-font-size;

// components/_button.scss
.neo-btn {
  font-size: $btn-font-size;
}
```

##### Code formatting

Neo uses [Prettier](https://prettier.io) for code formatting, and [Stylelint](https://stylelint.io) as a linter to help avoid errors and enforce conventions in Sass styles.

See `package.json` for the rules set and available scripts to run these tools.

##### File structure

`scss` files are separated into the following directories:

- `src/scss/base`
- `src/scss/components`
- `src/scss/elements`
- `src/scss/utilities`
- `src/scss/vendor`

##### See also

- http://getbem.com/naming/
- https://prettier.io/
- https://stylelint.io/

### Publishing the package

Neo is hosted on a private npm registry. To publish run `npm publish`.

- Note: This will publish the package to the registry specified in `publishConfig` in `package.json`.
